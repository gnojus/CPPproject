@startuml


skinparam dpi 200
skinparam classAttributeIconSize 0



/' Objects '/
namespace Packer {
	abstract class DataSource {
		+~DataSource()
		+{abstract} name() : std::string
		+{abstract} size() : std::size_t
		+{abstract} write(o : std::ostream&) : void
	}

	class File {
		-fileName : string
		-fileSize : size_t
	}

	class FileSource {
		-filename : std::string
		-file : std::ifstream
		+FileSource(_filename : std::string)
		+close() : void
		+name() : std::string
		+size() : std::size_t
		+write(o : std::ostream&) : void
	}

	class Header {
		-entries : vector<Entry>
		-calculateOffsets() : void
		+addEntry(filename : string, fileSize : size_t) : void
		+removeEntry(filename : string) : void
		+write(o : ostream&) : void
		+read(i : istream&) : void
	}

	class Header::Entry {
		-offset : size_t
	}

	class Packer {
		-out : ostream&
		-header : Header
		+Packer(o : ostream&)
		+addFile(filename : string) : void
		+create() : void
	}

	class StdinSource {
		-filename : std::string
		-data : std::string
		+StdinSource(_name : std::string)
		+name() : std::string
		+size() : std::size_t
		+write(o : std::ostream&) : void
	}

	class Unpacker {
		-in : istream&
		-header : Header
		+Unpacker(i : istream&)
		+listFiles() : vector<File>
		+extractFile(name : string, dir : string) : void
		+extractFile(name : string, o : ostream&) : void
		+extractFiles(dir : string) : void
	}
}




/' Inheritance relationships '/

Packer.DataSource <|-- Packer.FileSource


Packer.DataSource <|-- Packer.StdinSource


Packer.File <|-- Packer.Header::Entry





/' Aggregation relationships '/

Packer.Packer *-- Packer.Header


Packer.Unpacker *-- Packer.Header






/' Nested objects '/

Packer.Header +-- Packer.Header::Entry




@enduml
